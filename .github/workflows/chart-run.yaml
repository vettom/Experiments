name: Detect Chart Changes

on:
  pull_request:
    paths:
      - 'Helm-charts/**'
  push:
    branches:
      - main
    paths:
      - 'Helm-charts/**'

jobs:
  find-changed-charts:
    runs-on: ubuntu-latest
    outputs:
      changed_charts: ${{ steps.get-changed-charts.outputs.charts }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for accurate diffing

      - name: Get changed files
        id: files
        uses: tj-actions/changed-files@v44
        with:
          files: Helm-charts/**

      - name: Determine changed charts
        id: get-changed-charts
        run: |
          # Get a list of changed files
          CHANGED_FILES="${{ steps.files.outputs.all_changed_files }}"
          
          # Initialize an empty array for chart names
          declare -a CHART_DIRS=()
          
          # Loop through each changed file
          for file in $CHANGED_FILES; do
              # Check if the file path is within a chart directory
              if [[ "$file" =~ ^Helm-charts/([^/]+)/.* ]]; then
                  chart_dir="${BASH_REMATCH[1]}"
                  
                  # Add the chart directory to the array if it's not already there
                  if [[ ! " ${CHART_DIRS[@]} " =~ " ${chart_dir} " ]]; then
                      CHART_DIRS+=("$chart_dir")
                  fi
              fi
          done

          # Format the list as a JSON array for the workflow output
          JSON_LIST=$(printf '%s\n' "${CHART_DIRS[@]}" | jq -R . | jq -s .)
          
          # Set the output variable
          echo "Found the following changed charts: $JSON_LIST"
          echo "charts=$JSON_LIST" >> $GITHUB_OUTPUT

      - name: Use the list in a subsequent step
        run: |
          CHARTS_LIST=${{ steps.get-changed-charts.outputs.charts }}
          echo "List of changed charts: $CHARTS_LIST"
